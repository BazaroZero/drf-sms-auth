name: test
on:
  pull_request:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: drf-sms-auth
          POSTGRES_PASSWORD: drf-sms-auth
          POSTGRES_DB: drf-sms-auth
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2.4.2

      - name: Setup Python
        uses: actions/setup-python@v4.1.0
        with:
          python-version: "3.10"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Load cached venv if cache exists
        uses: actions/cache@v3.0.5
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-dev

      - name: Copy .env.example file
        run: cp drf-sms-auth/config/.env.example drf-sms-auth/config/.env

      - name: Test app
        run: cd drf-sms-auth && poetry run python manage.py test
